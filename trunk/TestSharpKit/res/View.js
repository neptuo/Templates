/*Generated by SharpKit 5 v5.2.0*/
if (typeof($CreateDelegate)=='undefined'){
    if(typeof($iKey)=='undefined') var $iKey = 0;
    if(typeof($pKey)=='undefined') var $pKey = String.fromCharCode(1);
    var $CreateDelegate = function(target, func){
        if (target == null || func == null) 
            return func;
        if(func.target==target && func.func==func)
            return func;
        if (target.$delegateCache == null)
            target.$delegateCache = {};
        if (func.$key == null)
            func.$key = $pKey + String(++$iKey);
        var delegate;
        if(target.$delegateCache!=null)
            delegate = target.$delegateCache[func.$key];
        if (delegate == null){
            delegate = function(){
                return func.apply(target, arguments);
            };
            delegate.func = func;
            delegate.target = target;
            delegate.isDelegate = true;
            if(target.$delegateCache!=null)
                target.$delegateCache[func.$key] = delegate;
        }
        return delegate;
    }
}
if (typeof(JsTypes) == "undefined")
    var JsTypes = [];
var Neptuo$Templates$View_B7C1FA09BECBCD1D79251994E26F3C4BB8C31E11 =
{
    fullname: "Neptuo.Templates.View_B7C1FA09BECBCD1D79251994E26F3C4BB8C31E11",
    baseTypeName: "Neptuo.Templates.BaseGeneratedView",
    assemblyName: "TestSharpKit",
    interfaceNames: ["Neptuo.Templates.IGeneratedView", "System.IDisposable"],
    Kind: "Class",
    definition:
    {
        ctor: function ()
        {
            this.field1 = null;
            this.field2 = null;
            this.field3 = null;
            this.field4 = null;
            this.field5 = null;
            this.field6 = null;
            this.field7 = null;
            this.field8 = null;
            this.field9 = null;
            this.field10 = null;
            this.field11 = null;
            this.field12 = null;
            this.field13 = null;
            this.field14 = null;
            Neptuo.Templates.BaseGeneratedView.ctor.call(this);
        },
        CreateViewPageControls: function ()
        {
            this.field1_Create();
            this.componentManager.AddComponent(this.field1, $CreateDelegate(this, this.field1_Bind));
            this.field13_Create();
            this.componentManager.AttachObserver(this.field1, this.field13, $CreateDelegate(this, this.field13_Bind));
            this.get_Content().Add(this.field1);
        },
        field1_Create: function ()
        {
            if ((this.field1 == null))
            {
                this.field1 = new TestConsoleNG.Controls.GenericContentControl.ctor$$IComponentManager(this.componentManager);
            }
        },
        field1_Bind: function ()
        {
            this.field1.set_TagName("div");
            this.field1.set_Content(new System.Collections.Generic.List$1.ctor(System.Object.ctor));
            this.field2_Create();
            this.componentManager.AddComponent(this.field2, $CreateDelegate(this, this.field2_Bind));
            this.field7_Create();
            this.componentManager.AttachObserver(this.field2, this.field7, $CreateDelegate(this, this.field7_Bind));
            this.field1.get_Content().Add(this.field2);
            this.field9_Create();
            this.componentManager.AddComponent(this.field9, $CreateDelegate(this, this.field9_Bind));
            this.field12_Create();
            this.componentManager.AttachObserver(this.field9, this.field12, $CreateDelegate(this, this.field12_Bind));
            this.field1.get_Content().Add(this.field9);
        },
        field2_Create: function ()
        {
            if ((this.field2 == null))
            {
                this.field2 = new TestConsoleNG.Controls.PanelControl.ctor(this.componentManager);
            }
        },
        field2_Bind: function ()
        {
            this.field2.set_Content(new System.Collections.Generic.List$1.ctor(System.Object.ctor));
            this.field3_Create();
            this.componentManager.AddComponent(this.field3, $CreateDelegate(this, this.field3_Bind));
            this.field2.get_Content().Add(this.field3);
            this.field6_Create();
            this.componentManager.AddComponent(this.field6, $CreateDelegate(this, this.field6_Bind));
            this.field2.get_Content().Add(this.field6);
        },
        field3_Create: function ()
        {
            if ((this.field3 == null))
            {
                this.field3 = new TestConsoleNG.Controls.TextBoxControl.ctor(this.componentManager);
            }
        },
        field3_Bind: function ()
        {
            this.field3.set_Name("surname");
            this.field4_Create();
            this.field4_Bind();
            this.field3.set_Text((Cast((this.field4.ProvideValue(new Neptuo.Templates.Extensions.DefaultMarkupExtensionContext.ctor(this.field3, Typeof(TestConsoleNG.Controls.TextBoxControl.ctor).GetProperty$$String("Text"), this.dependencyProvider))), System.String.ctor)));
        },
        field4_Create: function ()
        {
            if ((this.field4 == null))
            {
                this.field4 = new TestConsoleNG.Extensions.BindingExtension.ctor((Cast((this.dependencyProvider.Resolve(Typeof(TestConsoleNG.Data.DataStorage.ctor), null)), TestConsoleNG.Data.DataStorage.ctor)));
            }
        },
        field4_Bind: function ()
        {
            this.field5_Create();
            this.field5_Bind();
            this.field4.set_Expression((Cast((this.field5.ProvideValue(new Neptuo.Templates.Extensions.DefaultMarkupExtensionContext.ctor(this.field4, Typeof(TestConsoleNG.Extensions.BindingExtension.ctor).GetProperty$$String("Expression"), this.dependencyProvider))), System.String.ctor)));
        },
        field5_Create: function ()
        {
            if ((this.field5 == null))
            {
                this.field5 = new TestConsoleNG.Extensions.BindingExtension.ctor((Cast((this.dependencyProvider.Resolve(Typeof(TestConsoleNG.Data.DataStorage.ctor), null)), TestConsoleNG.Data.DataStorage.ctor)));
            }
        },
        field5_Bind: function ()
        {
            this.field5.set_Expression("Kitty");
        },
        field6_Create: function ()
        {
            if ((this.field6 == null))
            {
                this.field6 = new TestConsoleNG.Controls.TextBoxControl.ctor(this.componentManager);
            }
        },
        field6_Bind: function ()
        {
            this.field6.set_Name("surname");
        },
        field7_Create: function ()
        {
            if ((this.field7 == null))
            {
                this.field7 = new TestConsoleNG.Observers.DataContextObserver.ctor(this.componentManager, (Cast((this.dependencyProvider.Resolve(Typeof(TestConsoleNG.Data.DataStorage.ctor), null)), TestConsoleNG.Data.DataStorage.ctor)));
            }
        },
        field7_Bind: function ()
        {
            this.field8_Create();
            this.field8_Bind();
            this.field7.set_DataContext((this.field8.ProvideValue(new Neptuo.Templates.Extensions.DefaultMarkupExtensionContext.ctor(this.field7, Typeof(TestConsoleNG.Observers.DataContextObserver.ctor).GetProperty$$String("DataContext"), this.dependencyProvider))));
        },
        field8_Create: function ()
        {
            if ((this.field8 == null))
            {
                this.field8 = new TestConsoleNG.Extensions.BindingExtension.ctor((Cast((this.dependencyProvider.Resolve(Typeof(TestConsoleNG.Data.DataStorage.ctor), null)), TestConsoleNG.Data.DataStorage.ctor)));
            }
        },
        field8_Bind: function ()
        {
        },
        field9_Create: function ()
        {
            if ((this.field9 == null))
            {
                this.field9 = new TestConsoleNG.Controls.PanelControl.ctor(this.componentManager);
            }
        },
        field9_Bind: function ()
        {
            this.field9.set_Content(new System.Collections.Generic.List$1.ctor(System.Object.ctor));
            this.field10_Create();
            this.componentManager.AddComponent(this.field10, $CreateDelegate(this, this.field10_Bind));
            this.field9.get_Content().Add(this.field10);
        },
        field10_Create: function ()
        {
            if ((this.field10 == null))
            {
                this.field10 = new TestConsoleNG.Controls.TextBoxControl.ctor(this.componentManager);
            }
        },
        field10_Bind: function ()
        {
            this.field11_Create();
            this.field11_Bind();
            this.field10.set_Text((Cast((this.field11.ProvideValue(new Neptuo.Templates.Extensions.DefaultMarkupExtensionContext.ctor(this.field10, Typeof(TestConsoleNG.Controls.TextBoxControl.ctor).GetProperty$$String("Text"), this.dependencyProvider))), System.String.ctor)));
        },
        field11_Create: function ()
        {
            if ((this.field11 == null))
            {
                this.field11 = new TestConsoleNG.Extensions.BindingExtension.ctor((Cast((this.dependencyProvider.Resolve(Typeof(TestConsoleNG.Data.DataStorage.ctor), null)), TestConsoleNG.Data.DataStorage.ctor)));
            }
        },
        field11_Bind: function ()
        {
        },
        field12_Create: function ()
        {
            if ((this.field12 == null))
            {
                this.field12 = new TestConsoleNG.Observers.VisibleObserver.ctor();
            }
        },
        field12_Bind: function ()
        {
            this.field12.set_Visible(false);
        },
        field13_Create: function ()
        {
            if ((this.field13 == null))
            {
                this.field13 = new TestConsoleNG.Observers.DataContextObserver.ctor(this.componentManager, (Cast((this.dependencyProvider.Resolve(Typeof(TestConsoleNG.Data.DataStorage.ctor), null)), TestConsoleNG.Data.DataStorage.ctor)));
            }
        },
        field13_Bind: function ()
        {
            this.field14_Create();
            this.field14_Bind();
            this.field13.set_DataContext((this.field14.ProvideValue(new Neptuo.Templates.Extensions.DefaultMarkupExtensionContext.ctor(this.field13, Typeof(TestConsoleNG.Observers.DataContextObserver.ctor).GetProperty$$String("DataContext"), this.dependencyProvider))));
        },
        field14_Create: function ()
        {
            if ((this.field14 == null))
            {
                this.field14 = new TestConsoleNG.Extensions.BindingExtension.ctor((Cast((this.dependencyProvider.Resolve(Typeof(TestConsoleNG.Data.DataStorage.ctor), null)), TestConsoleNG.Data.DataStorage.ctor)));
            }
        },
        field14_Bind: function ()
        {
        }
    }
};
JsTypes.push(Neptuo$Templates$View_B7C1FA09BECBCD1D79251994E26F3C4BB8C31E11);
