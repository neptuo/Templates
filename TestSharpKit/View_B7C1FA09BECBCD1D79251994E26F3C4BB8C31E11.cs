//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18051
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using SharpKit.JavaScript;
namespace Neptuo.Templates
{
    [JsType(JsMode.Clr, Filename = "res/View.js")]
    public sealed class View_B7C1FA09BECBCD1D79251994E26F3C4BB8C31E11 : Neptuo.Templates.BaseGeneratedView, System.IDisposable
    {
        private TestConsoleNG.Controls.GenericContentControl field1;
        private TestConsoleNG.Controls.PanelControl field2;
        private TestConsoleNG.Controls.TextBoxControl field3;
        private TestConsoleNG.Extensions.BindingExtension field4;
        private TestConsoleNG.Extensions.BindingExtension field5;
        private TestConsoleNG.Controls.TextBoxControl field6;
        private TestConsoleNG.Observers.DataContextObserver field7;
        private TestConsoleNG.Extensions.BindingExtension field8;
        private TestConsoleNG.Controls.PanelControl field9;
        private TestConsoleNG.Controls.TextBoxControl field10;
        private TestConsoleNG.Extensions.BindingExtension field11;
        private TestConsoleNG.Observers.VisibleObserver field12;
        private TestConsoleNG.Observers.DataContextObserver field13;
        private TestConsoleNG.Extensions.BindingExtension field14;
        protected override void CreateViewPageControls()
        {
            this.field1_Create();
            this.componentManager.AddComponent(this.field1, this.field1_Bind);
            this.field13_Create();
            this.componentManager.AttachObserver(this.field1, this.field13, this.field13_Bind);
            this.Content.Add(this.field1);
        }
        private void field1_Create()
        {
            if ((this.field1 == null))
            {
                this.field1 = new TestConsoleNG.Controls.GenericContentControl(this.componentManager);
            }
        }
        private void field1_Bind()
        {
            this.field1.TagName = "div";
            this.field1.Content = new System.Collections.Generic.List<object>();
            this.field2_Create();
            this.componentManager.AddComponent(this.field2, this.field2_Bind);
            this.field7_Create();
            this.componentManager.AttachObserver(this.field2, this.field7, this.field7_Bind);
            this.field1.Content.Add(this.field2);
            this.field9_Create();
            this.componentManager.AddComponent(this.field9, this.field9_Bind);
            this.field12_Create();
            this.componentManager.AttachObserver(this.field9, this.field12, this.field12_Bind);
            this.field1.Content.Add(this.field9);
        }
        private void field2_Create()
        {
            if ((this.field2 == null))
            {
                this.field2 = new TestConsoleNG.Controls.PanelControl(this.componentManager);
            }
        }
        private void field2_Bind()
        {
            this.field2.Content = new System.Collections.Generic.List<object>();
            this.field3_Create();
            this.componentManager.AddComponent(this.field3, this.field3_Bind);
            this.field2.Content.Add(this.field3);
            this.field6_Create();
            this.componentManager.AddComponent(this.field6, this.field6_Bind);
            this.field2.Content.Add(this.field6);
        }
        private void field3_Create()
        {
            if ((this.field3 == null))
            {
                this.field3 = new TestConsoleNG.Controls.TextBoxControl(this.componentManager);
            }
        }
        private void field3_Bind()
        {
            this.field3.Name = "surname";
            this.field4_Create();
            this.field4_Bind();
            this.field3.Text = ((string)(this.field4.ProvideValue(new Neptuo.Templates.Extensions.DefaultMarkupExtensionContext(this.field3, typeof(TestConsoleNG.Controls.TextBoxControl).GetProperty("Text"), this.dependencyProvider))));
        }
        private void field4_Create()
        {
            if ((this.field4 == null))
            {
                this.field4 = new TestConsoleNG.Extensions.BindingExtension(((TestConsoleNG.Data.DataStorage)(this.dependencyProvider.Resolve(typeof(TestConsoleNG.Data.DataStorage), null))));
            }
        }
        private void field4_Bind()
        {
            this.field5_Create();
            this.field5_Bind();
            this.field4.Expression = ((string)(this.field5.ProvideValue(new Neptuo.Templates.Extensions.DefaultMarkupExtensionContext(this.field4, typeof(TestConsoleNG.Extensions.BindingExtension).GetProperty("Expression"), this.dependencyProvider))));
        }
        private void field5_Create()
        {
            if ((this.field5 == null))
            {
                this.field5 = new TestConsoleNG.Extensions.BindingExtension(((TestConsoleNG.Data.DataStorage)(this.dependencyProvider.Resolve(typeof(TestConsoleNG.Data.DataStorage), null))));
            }
        }
        private void field5_Bind()
        {
            this.field5.Expression = "Kitty";
        }
        private void field6_Create()
        {
            if ((this.field6 == null))
            {
                this.field6 = new TestConsoleNG.Controls.TextBoxControl(this.componentManager);
            }
        }
        private void field6_Bind()
        {
            this.field6.Name = "surname";
        }
        private void field7_Create()
        {
            if ((this.field7 == null))
            {
                this.field7 = new TestConsoleNG.Observers.DataContextObserver(this.componentManager, ((TestConsoleNG.Data.DataStorage)(this.dependencyProvider.Resolve(typeof(TestConsoleNG.Data.DataStorage), null))));
            }
        }
        private void field7_Bind()
        {
            this.field8_Create();
            this.field8_Bind();
            this.field7.DataContext = ((object)(this.field8.ProvideValue(new Neptuo.Templates.Extensions.DefaultMarkupExtensionContext(this.field7, typeof(TestConsoleNG.Observers.DataContextObserver).GetProperty("DataContext"), this.dependencyProvider))));
        }
        private void field8_Create()
        {
            if ((this.field8 == null))
            {
                this.field8 = new TestConsoleNG.Extensions.BindingExtension(((TestConsoleNG.Data.DataStorage)(this.dependencyProvider.Resolve(typeof(TestConsoleNG.Data.DataStorage), null))));
            }
        }
        private void field8_Bind()
        {
        }
        private void field9_Create()
        {
            if ((this.field9 == null))
            {
                this.field9 = new TestConsoleNG.Controls.PanelControl(this.componentManager);
            }
        }
        private void field9_Bind()
        {
            this.field9.Content = new System.Collections.Generic.List<object>();
            this.field10_Create();
            this.componentManager.AddComponent(this.field10, this.field10_Bind);
            this.field9.Content.Add(this.field10);
        }
        private void field10_Create()
        {
            if ((this.field10 == null))
            {
                this.field10 = new TestConsoleNG.Controls.TextBoxControl(this.componentManager);
            }
        }
        private void field10_Bind()
        {
            this.field11_Create();
            this.field11_Bind();
            this.field10.Text = ((string)(this.field11.ProvideValue(new Neptuo.Templates.Extensions.DefaultMarkupExtensionContext(this.field10, typeof(TestConsoleNG.Controls.TextBoxControl).GetProperty("Text"), this.dependencyProvider))));
        }
        private void field11_Create()
        {
            if ((this.field11 == null))
            {
                this.field11 = new TestConsoleNG.Extensions.BindingExtension(((TestConsoleNG.Data.DataStorage)(this.dependencyProvider.Resolve(typeof(TestConsoleNG.Data.DataStorage), null))));
            }
        }
        private void field11_Bind()
        {
        }
        private void field12_Create()
        {
            if ((this.field12 == null))
            {
                this.field12 = new TestConsoleNG.Observers.VisibleObserver();
            }
        }
        private void field12_Bind()
        {
            this.field12.Visible = false;
        }
        private void field13_Create()
        {
            if ((this.field13 == null))
            {
                this.field13 = new TestConsoleNG.Observers.DataContextObserver(this.componentManager, ((TestConsoleNG.Data.DataStorage)(this.dependencyProvider.Resolve(typeof(TestConsoleNG.Data.DataStorage), null))));
            }
        }
        private void field13_Bind()
        {
            this.field14_Create();
            this.field14_Bind();
            this.field13.DataContext = ((object)(this.field14.ProvideValue(new Neptuo.Templates.Extensions.DefaultMarkupExtensionContext(this.field13, typeof(TestConsoleNG.Observers.DataContextObserver).GetProperty("DataContext"), this.dependencyProvider))));
        }
        private void field14_Create()
        {
            if ((this.field14 == null))
            {
                this.field14 = new TestConsoleNG.Extensions.BindingExtension(((TestConsoleNG.Data.DataStorage)(this.dependencyProvider.Resolve(typeof(TestConsoleNG.Data.DataStorage), null))));
            }
        }
        private void field14_Bind()
        {
        }
    }
}
