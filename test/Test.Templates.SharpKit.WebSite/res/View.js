/* Generated by SharpKit 5 v5.4.4 */
if (typeof($CreateDelegate)=='undefined'){
    if(typeof($iKey)=='undefined') var $iKey = 0;
    if(typeof($pKey)=='undefined') var $pKey = String.fromCharCode(1);
    var $CreateDelegate = function(target, func){
        if (target == null || func == null) 
            return func;
        if(func.target==target && func.func==func)
            return func;
        if (target.$delegateCache == null)
            target.$delegateCache = {};
        if (func.$key == null)
            func.$key = $pKey + String(++$iKey);
        var delegate;
        if(target.$delegateCache!=null)
            delegate = target.$delegateCache[func.$key];
        if (delegate == null){
            delegate = function(){
                return func.apply(target, arguments);
            };
            delegate.func = func;
            delegate.target = target;
            delegate.isDelegate = true;
            if(target.$delegateCache!=null)
                target.$delegateCache[func.$key] = delegate;
        }
        return delegate;
    }
}


if (typeof(JsTypes) == "undefined")
    var JsTypes = [];
var Neptuo$Reflection$ReflectionHelper = {
    fullname: "Neptuo.Reflection.ReflectionHelper",
    baseTypeName: "System.Object",
    staticDefinition: {
        GetAttribute$1: function (T, member){
            var attrs = member.GetCustomAttributes$$Type$$Boolean(Typeof(T), true) instanceof Array || member.GetCustomAttributes$$Type$$Boolean(Typeof(T), true) == null ? member.GetCustomAttributes$$Type$$Boolean(Typeof(T), true) : (function (){
                throw new Error("InvalidCastException");
            }
            ());
            if (attrs.length == 1)
                return attrs[0];
            else
                return null;
        },
        GetTypesInNamespace: function (newNamespace){
            var targetAssembly = System.Reflection.Assembly.GetExecutingAssembly();
            var parts = newNamespace.Split$$Char$Array(",");
            if (parts.length == 2)
                targetAssembly = System.Reflection.Assembly.Load$$String(parts[1]);
            return System.Linq.Enumerable.ToList$1(System.Type.ctor, System.Linq.Enumerable.Where$1$$IEnumerable$1$$Func$2(System.Type.ctor, targetAssembly.GetTypes(), function (t){
                return t.get_Namespace() == parts[0];
            }));
        },
        GetAnnotatedProperties$1: function (T, type){
            var result = new System.Collections.Generic.List$1.ctor(System.Reflection.PropertyInfo.ctor);
            for (var $i2 = 0,$t2 = type.GetProperties(),$l2 = $t2.length,prop = $t2[$i2]; $i2 < $l2; $i2++, prop = $t2[$i2]){
                if (prop.GetCustomAttributes$$Type$$Boolean(Typeof(T), true).length == 1)
                    result.Add(prop);
            }
            return result;
        },
        IsGenericType$2$$Type: function (TAssignable, TArgument, testedType){
            return Neptuo.Reflection.ReflectionHelper.IsGenericType$$Type$$Type$$Type(testedType, Typeof(TAssignable), Typeof(TArgument));
        },
        IsGenericType$1$$Type: function (TAssignable, testedType){
            return Neptuo.Reflection.ReflectionHelper.IsGenericType$$Type$$Type(testedType, Typeof(TAssignable));
        },
        IsGenericType$$Type$$Type$$Type: function (testedType, assignableType, argumentType){
            if (argumentType == null)
                return false;
            return assignableType.IsAssignableFrom(testedType) && testedType.get_IsGenericType() && (testedType.GetGenericArguments()[0].IsAssignableFrom(argumentType) || argumentType.IsAssignableFrom(testedType.GetGenericArguments()[0]));
        },
        IsGenericType$$Type$$Type: function (testedType, assignableType){
            return assignableType.IsAssignableFrom(testedType) && testedType.get_IsGenericType();
        },
        GetGenericArgument: function (type, index){
            if (!type.get_IsGenericType())
                return null;
            return type.GetGenericArguments()[index];
        },
        CanBeUsedInMarkup: function (type, requireDefaultCtor){
            if (type.get_IsInterface())
                return false;
            if (type.get_IsAbstract())
                return false;
            if (requireDefaultCtor){
                if (System.Reflection.ConstructorInfo.op_Equality$$ConstructorInfo$$ConstructorInfo(type.GetConstructor$$Type$Array(new Array(0)), null))
                    return false;
            }
            return true;
        },
        PropertyName$$Expression$1: function (propertyGetter){
            return (As(propertyGetter.get_Body(), System.Linq.Expressions.MemberExpression.ctor) != null ? As(propertyGetter.get_Body(), System.Linq.Expressions.MemberExpression.ctor) : As((Cast(propertyGetter.get_Body(), System.Linq.Expressions.UnaryExpression.ctor)).get_Operand(), System.Linq.Expressions.MemberExpression.ctor)).get_Member().get_Name();
        },
        PropertyName$1$$Expression$1: function (T, propertyGetter){
            return (As(propertyGetter.get_Body(), System.Linq.Expressions.MemberExpression.ctor) != null ? As(propertyGetter.get_Body(), System.Linq.Expressions.MemberExpression.ctor) : As((Cast(propertyGetter.get_Body(), System.Linq.Expressions.UnaryExpression.ctor)).get_Operand(), System.Linq.Expressions.MemberExpression.ctor)).get_Member().get_Name();
        },
        PropertyName$2$$Expression$1: function (T, TResult, propertyGetter){
            return (As(propertyGetter.get_Body(), System.Linq.Expressions.MemberExpression.ctor) != null ? As(propertyGetter.get_Body(), System.Linq.Expressions.MemberExpression.ctor) : As((Cast(propertyGetter.get_Body(), System.Linq.Expressions.UnaryExpression.ctor)).get_Operand(), System.Linq.Expressions.MemberExpression.ctor)).get_Member().get_Name();
        },
        MethodName$2$$Expression$1: function (T, TParam1, propertyGetter){
            return (As((As((As((Cast(propertyGetter.get_Body(), System.Linq.Expressions.UnaryExpression.ctor)).get_Operand(), System.Linq.Expressions.MethodCallExpression.ctor)).get_Arguments().get_Item$$Int32(2), System.Linq.Expressions.ConstantExpression.ctor)).get_Value(), System.Reflection.MethodInfo.ctor)).get_Name();
        },
        MethodName$3$$Expression$1: function (T, TParam1, TParam2, propertyGetter){
            return (As((As((As((Cast(propertyGetter.get_Body(), System.Linq.Expressions.UnaryExpression.ctor)).get_Operand(), System.Linq.Expressions.MethodCallExpression.ctor)).get_Arguments().get_Item$$Int32(2), System.Linq.Expressions.ConstantExpression.ctor)).get_Value(), System.Reflection.MethodInfo.ctor)).get_Name();
        },
        MethodName$4$$Expression$1: function (T, TParam1, TParam2, TParam3, propertyGetter){
            return (As((As((As((Cast(propertyGetter.get_Body(), System.Linq.Expressions.UnaryExpression.ctor)).get_Operand(), System.Linq.Expressions.MethodCallExpression.ctor)).get_Arguments().get_Item$$Int32(2), System.Linq.Expressions.ConstantExpression.ctor)).get_Value(), System.Reflection.MethodInfo.ctor)).get_Name();
        },
        MethodName$1$$Expression$1: function (T, propertyGetter){
            return (As((As((As((Cast(propertyGetter.get_Body(), System.Linq.Expressions.UnaryExpression.ctor)).get_Operand(), System.Linq.Expressions.MethodCallExpression.ctor)).get_Arguments().get_Item$$Int32(2), System.Linq.Expressions.ConstantExpression.ctor)).get_Value(), System.Reflection.MethodInfo.ctor)).get_Name();
        },
        MethodName$5$$Expression$1: function (T, TParam1, TParam2, TParam3, TParam4, propertyGetter){
            return (As((As((As((Cast(propertyGetter.get_Body(), System.Linq.Expressions.UnaryExpression.ctor)).get_Operand(), System.Linq.Expressions.MethodCallExpression.ctor)).get_Arguments().get_Item$$Int32(2), System.Linq.Expressions.ConstantExpression.ctor)).get_Value(), System.Reflection.MethodInfo.ctor)).get_Name();
        }
    },
    assemblyName: "TestSharpKit",
    Kind: "Class",
    definition: {
        ctor: function (){
            System.Object.ctor.call(this);
        }
    }
};
JsTypes.push(Neptuo$Reflection$ReflectionHelper);
var Neptuo$Templates$View_38422005C8911AD1E3131BF96B087D39DBA789AA = {
    fullname: "Neptuo.Templates.View_38422005C8911AD1E3131BF96B087D39DBA789AA",
    baseTypeName: "Neptuo.Templates.GeneratedView",
    assemblyName: "TestSharpKit",
    interfaceNames: ["System.IDisposable"],
    Kind: "Class",
    definition: {
        ctor: function (){
            this.field2 = null;
            Neptuo.Templates.GeneratedView.ctor.call(this);
        },
        CastValueTo$1: function (T, value){
            return value.toString();
        },
        BindView: function (view){
            this.get_Content().Add("<!-- This is a html comment -->\r\n");
            this.get_Content().Add(this.field1_Create());
        },
        field1_Create: function (){
            var field1 = new Test.Templates.Controls.GenericContentControl.ctor();
            this.componentManager.AddComponent$1(Test.Templates.Controls.GenericContentControl.ctor, field1, $CreateDelegate(this, this.field1_Bind));
            this.componentManager.AttachObserver$1(Test.Templates.Observers.DataContextObserver.ctor, field1, this.field2_Create(), $CreateDelegate(this, this.field2_Bind));
            return field1;
        },
        field2_Create: function (){
            if ((this.field2 == null)){
                this.field2 = new Test.Templates.Observers.DataContextObserver.ctor((Cast((this.dependencyProvider.Resolve(Typeof(Test.Templates.Data.DataStorage.ctor), null)), Test.Templates.Data.DataStorage.ctor)));
                this.componentManager.AddComponent$1(Test.Templates.Observers.DataContextObserver.ctor, this.field2, $CreateDelegate(this, this.field2_Bind));
            }
            return this.field2;
        },
        field2_Bind: function (field2){
            field2.set_DataContext((this.field3_Create().ProvideValue(this.CreateValueExtensionContext(field2, "DataContext"))));
        },
        field3_Create: function (){
            var field3 = new Test.Templates.Extensions.BindingExtension.ctor((Cast((this.dependencyProvider.Resolve(Typeof(Test.Templates.Data.DataStorage.ctor), null)), Test.Templates.Data.DataStorage.ctor)), (Cast((this.dependencyProvider.Resolve(Typeof(Test.Templates.Extensions.IValueConverterService.ctor), null)), Test.Templates.Extensions.IValueConverterService.ctor)));
            field3.set_Expression("Address");
            return field3;
        },
        field1_Bind: function (field1){
            field1.set_TagName("div");
            field1.set_Content(new System.Collections.Generic.List$1.ctor(System.Object.ctor));
            field1.get_Content().Add("\r\n    ");
            field1.get_Content().Add(this.field4_Create());
            field1.get_Content().Add("\r\n    ");
            field1.get_Content().Add(this.field9_Create());
            field1.get_Content().Add("\r\n    ");
            field1.get_Content().Add(this.field12_Create());
            field1.get_Content().Add("\r\n    ");
            field1.get_Content().Add(this.field15_Create());
            field1.get_Content().Add("\r\n");
        },
        field4_Create: function (){
            var field4 = new Test.Templates.Controls.PanelControl.ctor();
            this.componentManager.AddComponent$1(Test.Templates.Controls.PanelControl.ctor, field4, $CreateDelegate(this, this.field4_Bind));
            this.componentManager.AttachObserver$1(Test.Templates.Observers.VisibleObserver.ctor, field4, this.field5_Create(), $CreateDelegate(this, this.field5_Bind));
            return field4;
        },
        field5_Create: function (){
            var field5 = new Test.Templates.Observers.VisibleObserver.ctor();
            this.componentManager.AddComponent$1(Test.Templates.Observers.VisibleObserver.ctor, field5, $CreateDelegate(this, this.field5_Bind));
            return field5;
        },
        field5_Bind: function (field5){
            field5.set_Visible(this.CastValueTo$1(System.Boolean.ctor, this.field6_Create().ProvideValue(this.CreateValueExtensionContext(field5, "Visible"))));
        },
        field6_Create: function (){
            var field6 = new Test.Templates.Extensions.BindingExtension.ctor((Cast((this.dependencyProvider.Resolve(Typeof(Test.Templates.Data.DataStorage.ctor), null)), Test.Templates.Data.DataStorage.ctor)), (Cast((this.dependencyProvider.Resolve(Typeof(Test.Templates.Extensions.IValueConverterService.ctor), null)), Test.Templates.Extensions.IValueConverterService.ctor)));
            field6.set_ConverterKey("NullToBool");
            field6.set_Expression("Street");
            return field6;
        },
        field4_Bind: function (field4){
            field4.set_Header("Street:");
            field4.set_Content(new System.Collections.Generic.List$1.ctor(System.Object.ctor));
            field4.get_Content().Add("\r\n        ");
            field4.get_Content().Add(this.field7_Create());
            field4.get_Content().Add("\r\n    ");
        },
        field7_Create: function (){
            var field7 = new Test.Templates.Controls.TextBoxControl.ctor();
            this.componentManager.AddComponent$1(Test.Templates.Controls.TextBoxControl.ctor, field7, $CreateDelegate(this, this.field7_Bind));
            return field7;
        },
        field7_Bind: function (field7){
            field7.set_Name("street");
            field7.set_Text(this.CastValueTo$1(System.String.ctor, this.field8_Create().ProvideValue(this.CreateValueExtensionContext(field7, "Text"))));
        },
        field8_Create: function (){
            var field8 = new Test.Templates.Extensions.BindingExtension.ctor((Cast((this.dependencyProvider.Resolve(Typeof(Test.Templates.Data.DataStorage.ctor), null)), Test.Templates.Data.DataStorage.ctor)), (Cast((this.dependencyProvider.Resolve(Typeof(Test.Templates.Extensions.IValueConverterService.ctor), null)), Test.Templates.Extensions.IValueConverterService.ctor)));
            field8.set_Expression("Street");
            return field8;
        },
        field9_Create: function (){
            var field9 = new Test.Templates.Controls.PanelControl.ctor();
            this.componentManager.AddComponent$1(Test.Templates.Controls.PanelControl.ctor, field9, $CreateDelegate(this, this.field9_Bind));
            return field9;
        },
        field9_Bind: function (field9){
            field9.set_Header("House Number:");
            field9.set_Content(new System.Collections.Generic.List$1.ctor(System.Object.ctor));
            field9.get_Content().Add("\r\n        ");
            field9.get_Content().Add(this.field10_Create());
            field9.get_Content().Add("\r\n    ");
        },
        field10_Create: function (){
            var field10 = new Test.Templates.Controls.TextBoxControl.ctor();
            this.componentManager.AddComponent$1(Test.Templates.Controls.TextBoxControl.ctor, field10, $CreateDelegate(this, this.field10_Bind));
            return field10;
        },
        field10_Bind: function (field10){
            field10.set_Name("housenumber");
            field10.set_Text(this.CastValueTo$1(System.String.ctor, this.field11_Create().ProvideValue(this.CreateValueExtensionContext(field10, "Text"))));
        },
        field11_Create: function (){
            var field11 = new Test.Templates.Extensions.BindingExtension.ctor((Cast((this.dependencyProvider.Resolve(Typeof(Test.Templates.Data.DataStorage.ctor), null)), Test.Templates.Data.DataStorage.ctor)), (Cast((this.dependencyProvider.Resolve(Typeof(Test.Templates.Extensions.IValueConverterService.ctor), null)), Test.Templates.Extensions.IValueConverterService.ctor)));
            field11.set_Expression("HouseNumber");
            return field11;
        },
        field12_Create: function (){
            var field12 = new Test.Templates.Controls.PanelControl.ctor();
            this.componentManager.AddComponent$1(Test.Templates.Controls.PanelControl.ctor, field12, $CreateDelegate(this, this.field12_Bind));
            return field12;
        },
        field12_Bind: function (field12){
            field12.set_Header("City:");
            field12.set_Content(new System.Collections.Generic.List$1.ctor(System.Object.ctor));
            field12.get_Content().Add("\r\n        ");
            field12.get_Content().Add(this.field13_Create());
            field12.get_Content().Add("\r\n    ");
        },
        field13_Create: function (){
            var field13 = new Test.Templates.Controls.TextBoxControl.ctor();
            this.componentManager.AddComponent$1(Test.Templates.Controls.TextBoxControl.ctor, field13, $CreateDelegate(this, this.field13_Bind));
            return field13;
        },
        field13_Bind: function (field13){
            field13.set_Name("city");
            field13.set_Text(this.CastValueTo$1(System.String.ctor, this.field14_Create().ProvideValue(this.CreateValueExtensionContext(field13, "Text"))));
        },
        field14_Create: function (){
            var field14 = new Test.Templates.Extensions.BindingExtension.ctor((Cast((this.dependencyProvider.Resolve(Typeof(Test.Templates.Data.DataStorage.ctor), null)), Test.Templates.Data.DataStorage.ctor)), (Cast((this.dependencyProvider.Resolve(Typeof(Test.Templates.Extensions.IValueConverterService.ctor), null)), Test.Templates.Extensions.IValueConverterService.ctor)));
            field14.set_Expression("City");
            return field14;
        },
        field15_Create: function (){
            var field15 = new Test.Templates.Controls.PanelControl.ctor();
            this.componentManager.AddComponent$1(Test.Templates.Controls.PanelControl.ctor, field15, $CreateDelegate(this, this.field15_Bind));
            return field15;
        },
        field15_Bind: function (field15){
            field15.set_Header("Postal code:");
            field15.set_Content(new System.Collections.Generic.List$1.ctor(System.Object.ctor));
            field15.get_Content().Add("\r\n        ");
            field15.get_Content().Add(this.field16_Create());
            field15.get_Content().Add("\r\n    ");
        },
        field16_Create: function (){
            var field16 = new Test.Templates.Controls.TextBoxControl.ctor();
            this.componentManager.AddComponent$1(Test.Templates.Controls.TextBoxControl.ctor, field16, $CreateDelegate(this, this.field16_Bind));
            return field16;
        },
        field16_Bind: function (field16){
            field16.set_Name("postalcode");
            field16.set_Text(this.CastValueTo$1(System.String.ctor, this.field17_Create().ProvideValue(this.CreateValueExtensionContext(field16, "Text"))));
        },
        field17_Create: function (){
            var field17 = new Test.Templates.Extensions.BindingExtension.ctor((Cast((this.dependencyProvider.Resolve(Typeof(Test.Templates.Data.DataStorage.ctor), null)), Test.Templates.Data.DataStorage.ctor)), (Cast((this.dependencyProvider.Resolve(Typeof(Test.Templates.Extensions.IValueConverterService.ctor), null)), Test.Templates.Extensions.IValueConverterService.ctor)));
            field17.set_Expression("PostalCode");
            return field17;
        }
    }
};
JsTypes.push(Neptuo$Templates$View_38422005C8911AD1E3131BF96B087D39DBA789AA);
var Neptuo$Templates$View_9741084CDDEB89E6278CC0A58C5F284F84983F2D = {
    fullname: "Neptuo.Templates.View_9741084CDDEB89E6278CC0A58C5F284F84983F2D",
    baseTypeName: "Neptuo.Templates.GeneratedView",
    assemblyName: "TestSharpKit",
    interfaceNames: ["System.IDisposable"],
    Kind: "Class",
    definition: {
        ctor: function (){
            Neptuo.Templates.GeneratedView.ctor.call(this);
        },
        BindView: function (view){
            this.get_Content().Add("<div>");
            this.get_Content().Add(this.field1_Create());
            this.get_Content().Add(this.field4_Create());
            this.get_Content().Add(this.field7_Create());
            this.get_Content().Add(this.field10_Create());
            this.get_Content().Add("</div>");
        },
        field1_Create: function (){
            var field1 = new Test.Templates.Controls.PanelControl.ctor();
            this.componentManager.AddComponent$1(Test.Templates.Controls.PanelControl.ctor, field1, $CreateDelegate(this, this.field1_Bind));
            return field1;
        },
        field1_Bind: function (field1){
            field1.set_Content(new System.Collections.Generic.List$1.ctor(System.Object.ctor));
            field1.get_Content().Add(" \r\n        Street: \r\n        ");
            field1.get_Content().Add(this.field2_Create());
        },
        field2_Create: function (){
            var field2 = new Test.Templates.Controls.TextBoxControl.ctor();
            this.componentManager.AddComponent$1(Test.Templates.Controls.TextBoxControl.ctor, field2, $CreateDelegate(this, this.field2_Bind));
            return field2;
        },
        field2_Bind: function (field2){
            field2.set_Name("street");
            field2.set_Text((Cast((this.field3_Create().ProvideValue(new Neptuo.Templates.Extensions.DefaultExtensionContext.ctor(field2, field2.GetType().GetProperty$$String("Text"), this.dependencyProvider))), System.String.ctor)));
        },
        field3_Create: function (){
            var field3 = new Test.Templates.Extensions.BindingExtension.ctor((Cast((this.dependencyProvider.Resolve(Typeof(Test.Templates.Data.DataStorage.ctor), null)), Test.Templates.Data.DataStorage.ctor)), null);
            field3.set_Expression("Street");
            return field3;
        },
        field4_Create: function (){
            var field4 = new Test.Templates.Controls.PanelControl.ctor();
            this.componentManager.AddComponent$1(Test.Templates.Controls.PanelControl.ctor, field4, $CreateDelegate(this, this.field4_Bind));
            return field4;
        },
        field4_Bind: function (field4){
            field4.set_Content(new System.Collections.Generic.List$1.ctor(System.Object.ctor));
            field4.get_Content().Add("\r\n        House Number:\r\n        ");
            field4.get_Content().Add(this.field5_Create());
        },
        field5_Create: function (){
            var field5 = new Test.Templates.Controls.TextBoxControl.ctor();
            this.componentManager.AddComponent$1(Test.Templates.Controls.TextBoxControl.ctor, field5, $CreateDelegate(this, this.field5_Bind));
            return field5;
        },
        field5_Bind: function (field5){
            field5.set_Name("housenumber");
            field5.set_Text((Cast((this.field6_Create().ProvideValue(new Neptuo.Templates.Extensions.DefaultExtensionContext.ctor(field5, field5.GetType().GetProperty$$String("Text"), this.dependencyProvider))), System.String.ctor)));
        },
        field6_Create: function (){
            var field6 = new Test.Templates.Extensions.BindingExtension.ctor((Cast((this.dependencyProvider.Resolve(Typeof(Test.Templates.Data.DataStorage.ctor), null)), Test.Templates.Data.DataStorage.ctor)), null);
            field6.set_Expression("HouseNumber");
            return field6;
        },
        field7_Create: function (){
            var field7 = new Test.Templates.Controls.PanelControl.ctor();
            this.componentManager.AddComponent$1(Test.Templates.Controls.PanelControl.ctor, field7, $CreateDelegate(this, this.field7_Bind));
            return field7;
        },
        field7_Bind: function (field7){
            field7.set_Content(new System.Collections.Generic.List$1.ctor(System.Object.ctor));
            field7.get_Content().Add(" \r\n        City: \r\n        ");
            field7.get_Content().Add(this.field8_Create());
        },
        field8_Create: function (){
            var field8 = new Test.Templates.Controls.TextBoxControl.ctor();
            this.componentManager.AddComponent$1(Test.Templates.Controls.TextBoxControl.ctor, field8, $CreateDelegate(this, this.field8_Bind));
            return field8;
        },
        field8_Bind: function (field8){
            field8.set_Name("city");
            field8.set_Text((Cast((this.field9_Create().ProvideValue(new Neptuo.Templates.Extensions.DefaultExtensionContext.ctor(field8, field8.GetType().GetProperty$$String("Text"), this.dependencyProvider))), System.String.ctor)));
        },
        field9_Create: function (){
            var field9 = new Test.Templates.Extensions.BindingExtension.ctor((Cast((this.dependencyProvider.Resolve(Typeof(Test.Templates.Data.DataStorage.ctor), null)), Test.Templates.Data.DataStorage.ctor)), null);
            field9.set_Expression("City");
            return field9;
        },
        field10_Create: function (){
            var field10 = new Test.Templates.Controls.PanelControl.ctor();
            this.componentManager.AddComponent$1(Test.Templates.Controls.PanelControl.ctor, field10, $CreateDelegate(this, this.field10_Bind));
            return field10;
        },
        field10_Bind: function (field10){
            field10.set_Content(new System.Collections.Generic.List$1.ctor(System.Object.ctor));
            field10.get_Content().Add("\r\n        Postal code:\r\n        ");
            field10.get_Content().Add(this.field11_Create());
        },
        field11_Create: function (){
            var field11 = new Test.Templates.Controls.TextBoxControl.ctor();
            this.componentManager.AddComponent$1(Test.Templates.Controls.TextBoxControl.ctor, field11, $CreateDelegate(this, this.field11_Bind));
            return field11;
        },
        field11_Bind: function (field11){
            field11.set_Name("postalcode");
            field11.set_Text((Cast((this.field12_Create().ProvideValue(new Neptuo.Templates.Extensions.DefaultExtensionContext.ctor(field11, field11.GetType().GetProperty$$String("Text"), this.dependencyProvider))), System.String.ctor)));
        },
        field12_Create: function (){
            var field12 = new Test.Templates.Extensions.BindingExtension.ctor((Cast((this.dependencyProvider.Resolve(Typeof(Test.Templates.Data.DataStorage.ctor), null)), Test.Templates.Data.DataStorage.ctor)), null);
            field12.set_Expression("PostalCode");
            return field12;
        }
    }
};
JsTypes.push(Neptuo$Templates$View_9741084CDDEB89E6278CC0A58C5F284F84983F2D);
var Neptuo$Templates$View_C612CAF502A06BAAC6171B58D1EA2F61EC9D6D55 = {
    fullname: "Neptuo.Templates.View_C612CAF502A06BAAC6171B58D1EA2F61EC9D6D55",
    baseTypeName: "Neptuo.Templates.GeneratedView",
    assemblyName: "TestSharpKit",
    interfaceNames: ["System.IDisposable"],
    Kind: "Class",
    definition: {
        ctor: function (){
            Neptuo.Templates.GeneratedView.ctor.call(this);
        },
        BindView: function (view){
            this.get_Content().Add("<div><h:panel> \r\n        Street: \r\n        <h:textbox name=\"street\" />");
            this.get_Content().Add("</h:panel>");
            this.get_Content().Add("</div>");
        }
    }
};
JsTypes.push(Neptuo$Templates$View_C612CAF502A06BAAC6171B58D1EA2F61EC9D6D55);

